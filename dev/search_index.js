var documenterSearchIndex = {"docs":
[{"location":"stationaryDirectionSource/stationaryDirSource/#Stationary-Directional-Source-Modeling","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Symbol Type Description\nmathbfb_mathrms(t) vector function of time time-varying source beam center\nmathbfb_mathrmr(t) vector function of time time-varying receiver beam center\nTheta(t) scalar function of time angle relative to time-varying beam center\nmathrmG_mathrms(Theta) scalar function of angle Gain of the source antenna\nmathrmG_mathrmr(Theta) scalar function of angle Gain of the receiver antenna\nmathrmD_mathrmsbig(bmximathbfp_mathrmsmathbfb_mathrms(cdot)big) scalar function of position directivity of source\nmathrmD_mathrmrbig(bmximathbfp_mathrmrmathbfb_mathrmr(cdot)big) scalar function of position directivity of receiver\nmathsfhbig(bmxitmathbfp_mathrmsmathbfb_mathrms(cdot)big) scalar function of position and time LTI impulse response from    mathbfp_mathrms to  bmxi\nmathsfg(bmxitmathbfp_mathrmrmathbfb_mathrmr(cdot)) scalar function of position and time LTI impulse response from    bmxi to mathbfp_mathrmr","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"The LTI impulse response from mathbfp_mathrms to  bmxi is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfhbig(bmxitmathbfp_mathrmsmathbfb_mathrms(cdot)big) = mathrmD_mathrmsbig(bmximathbfp_mathrmsmathbfb_mathrms(cdot)big)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) deltaleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"beginaligned\r\nmathsfq(bmxit)  = mathsfp(t) oversett* mathsfhbig(bmxitmathbfp_mathrmsmathbfb_mathrms(cdot)big) \r\n               =mathrmD_mathrmsbig(bmximathbfp_mathrmsmathbfb_mathrms(cdot)big)\r\n               mathsfAleft(fracbmxi-mathbfp_mathrms\r\n               mathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)\r\nendaligned","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"The reflection due to source is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfr(bmxit) = mathsff(bmxi) mathsfq(bmxit)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"The LTI impulse response from an arbitrary position bmxi to the receiver at position mathbfp_mathrmr is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfgbig(bmxitmathbfp_mathrmrbig) = mathsfAleft(fracmathbfp_mathrmr-bmximathrmcright) deltaleft(t-fracmathbfp_mathrmr-bmximathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"The signal observed at mathbfp_mathrmr due to the reflection from the position bmxi is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"beginaligned\r\nmathsfpsi(bmxit) = mathsfr(bmxit) oversett* mathsfgbig(bmxitmathbfp_mathrmrbig) \r\n                 = mathsfAleft(fracmathbfp_mathrmr-bmximathrmcright) mathsfrleft(bmxit-fracmathbfp_mathrmr-bmximathrmcright)\r\nendaligned","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-A-[Single-pulse,-single-reflector,-transmitter-and-receiver-at-same-location]","page":"Stationary Directional Source Modeling","title":"Scenario A [Single pulse, single reflector, transmitter and receiver at same location]","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-Assumptions","page":"Stationary Directional Source Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"single stationary directional source with time-varying beam center\nsingle stationary receiver at same location as the source\nsingle stationary ideal point reflector\nthe source emits a pulse","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Forward-Modeling","page":"Stationary Directional Source Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"For scenario A, we provided the position of the stationary direction source ùê©‚Çõ, with time-varying beam center ùêõ(t), the stationary direction receiver's position ùê©·µ£ being at the same location (ùê©‚Çõ=ùê©·µ£), the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"We compute the reflection due to the directional source as follows","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathrmD_mathrmsbig(bmximathbfp_mathrmsmathbfb_mathrms(cdot)big)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) with (ùê©‚Çõ=ùê©·µ£) is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfz(t) = mathsfalpha_0 mathrmD_\r\nmathrmsbig(bmxi_0mathbfp_mathrms\r\nmathbfb_mathrms(cdot)big)mathsfA^2\r\nleft(fracmathbfp_mathrmr-bmxi_0\r\nmathrmcright)mathsfpleft(t -2fracmathbfp_mathrmr-bmxi_0mathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06 \r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ(t) = [cos(2œÄ*10*(t-t‚Çö)),0.0]/(norm(cos(2œÄ*10*(t-t‚Çö))))\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [0.2c*T,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t),ylims=(minimum(z(t)),maximum(z(t))), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Inverse-Modeling","page":"Stationary Directional Source Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Given the scenario A assumptions, we obtained the received signal, mathsfz(t). Now we can estimate the reflector function by considering the transmitted signal as follows ","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfp(t)=Œ¥(t-mathrmt_p)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"hatmathsff(bmxi) = dfracmathsfzleft(mathrmt_p+frac2bmxi-mathbfp_mathrmrmathrmcright)mathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrms(mathrmt_p)right)\r\nmathsfA^2big(fracbmxi-mathbfp_mathrmrmathrmcbig) ","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06 \r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ(t) = [cos(2œÄ*10*(t-t‚Çö)),0.0]/(norm(cos(2œÄ*10*(t-t‚Çö))))\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [0.2c*T,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nD‚Çõ(Œæ::Vector{Float64}) = G(angleBetween(ùêõ(t‚Çö), Œæ.-ùê©‚Çõ))\r\nf(Œæ::Vector{Float64}) = (z(t‚Çö.+2(norm(Œæ-ùê©‚Çõ))/c).*D‚Çõ(Œæ))/\r\n                        (A(norm(Œæ-ùê©‚Çõ)/c))^2\r\ninversePlot2D([q],[r],[z],f)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-B-[Single-pulse,-single-reflector,-transmitter-and-receiver-at-different-location]","page":"Stationary Directional Source Modeling","title":"Scenario B [Single pulse, single reflector, transmitter and receiver at different location]","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-Assumptions-2","page":"Stationary Directional Source Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"single stationary directional source with time-varying beam center\nsingle stationary receiver\nsingle stationary ideal point reflector\nthe source emits a pulse","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Forward-Modeling-2","page":"Stationary Directional Source Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"For scenario B, we provided the position of the stationary direction source ùê©‚Çõ, with time-varying beam center ùêõ(t), the stationary direction receiver's position ùê©·µ£, the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"We compute the reflection due to the directional source as follows","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathrmD_mathrmsbig(bmximathbfp_mathrmsmathbfb_mathrms(cdot)big)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfz(t) = mathsfalpha_0 mathrmD_\r\nmathrmsbig(bmxi_0mathbfp_mathrms\r\nmathbfb_mathrms(cdot)big)mathsfAleft(fracmathbfp_mathrmr-bmxi_0mathrmcright)\r\nmathsfAleft(fracbmxi_0-\r\nmathbfp_mathrmsmathrmcright) mathsfpleft(t-\r\nfracmathbfp_mathrmr-bmxi_0+bmxi_0-\r\nmathbfp_mathrmsmathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06 \r\nùê©‚Çõ =  [0.1c*T, 0.0]\r\nùê©·µ£ =  [-0.1c*T, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ(t) = [cos(2œÄ*10*(t-t‚Çö)),0.0]/(norm(cos(2œÄ*10*(t-t‚Çö))))\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [0.2c*T,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t),ylims=(minimum(z(t)),maximum(z(t))), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Inverse-Modeling-2","page":"Stationary Directional Source Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Given the scenario B assumptions, we obtained the received signal, mathsfz(t). Now we can estimate the reflector function by considering the transmitted signal as follows ","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfp(t)=Œ¥(t-mathrmt_p)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"hatmathsff(bmxi) =dfracmathsfzleft(mathrmt_p+fracmathbfp_mathrmr-\r\nbmxi+bmxi-mathbfp_mathrms\r\nmathrmc  right)mathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrms(mathrmt_p)right)mathsfAbig(fracbmxi-mathbfp_mathrmsmathrmcbig)    \r\nmathsfAbig(fracmathbfp_mathrmr-bmximathrmcbig)\r\n","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06 \r\nùê©‚Çõ =  [0.1c*T, 0.0]\r\nùê©·µ£ =  [-0.1c*T, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ(t) = [cos(2œÄ*10*(t-t‚Çö)),0.0]/(norm(cos(2œÄ*10*(t-t‚Çö))))\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [0.2c*T,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nD‚Çõ(Œæ::Vector{Float64}) = G(angleBetween(ùêõ(t‚Çö), Œæ.-ùê©‚Çõ))\r\nf(Œæ::Vector{Float64}) = (z(t‚Çö.+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£-Œæ))./c).*D‚Çõ(Œæ))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c))\r\ninversePlot2D([q],[r],[z],f)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-C-[Pulse-train,-multiple-reflector,-transmitter-and-receiver-at-same-location]","page":"Stationary Directional Source Modeling","title":"Scenario C [Pulse train, multiple reflector, transmitter and receiver at same location]","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-Assumptions-3","page":"Stationary Directional Source Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"single stationary directional source with time-varying beam center\nsingle stationary receiver at same location as the source\nmultiple stationary ideal point reflectors at different radial distances\nthe source emits a periodic impulse train","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Forward-Modeling-3","page":"Stationary Directional Source Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"For scenario C, we provided the position of the stationary direction source ùê©‚Çõ, with time-varying beam center ùêõ(t), the stationary direction receiver's position ùê©·µ£, being at the same location (ùê©‚Çõ=ùê©·µ£), the transmitted signal mathsfp(t), and multiple reflector say, N.","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsff(bmxi) = sumlimits_n=1^Nmathsfalpha_n delta(bmxi - bmxi_n)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"We compute the reflection due to the directional source as follows","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfr(bmxit) = sumlimits_n=1^Nmathsfalpha_n delta(bmxi - bmxi_n)\r\nmathrmD_mathrmsbig(bmximathbfp_mathrmsmathbfb_mathrms(cdot)big)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) is given by","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfz(t) = sumlimits_n=1^N mathsfalpha_n mathrmD_mathrmsbig(bmxi_nmathbfp_mathrms\r\nmathbfb_mathrmr(cdot)big)mathsfA^2\r\nleft(fracmathbfp_mathrms-bmxi_n\r\nmathrmcright)mathsfpleft(t -2fracmathbfp_mathrms-bmxi_nmathrmcright)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£ = [0.0, 0.0]\r\nt‚Çö = 1.0e-06 \r\nT  = 15.0e-6 \r\nD = 4 \r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-07)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [0.21c*T,0.0]\r\nŒ±‚ÇÇ = -0.7; ùõè‚ÇÇ = [0.0,0.10c*T] \r\nŒ±‚ÇÉ = -0.7; ùõè‚ÇÉ = [-0.22c*T,0.0]\r\nŒ±‚ÇÑ = -0.7; ùõè‚ÇÑ = [0.0,-0.15c*T]  \r\nŒ±‚ÇÖ = -0.7; ùõè‚ÇÖ = [0.18c*T,0.0]\r\nŒ±‚ÇÜ = -0.7; ùõè‚ÇÜ = [0.0,0.13c*T]\r\nŒ±‚Çá = -0.7; ùõè‚Çá = [0.0,-0.12c*T]\r\nŒ±‚Çà = -0.7; ùõè‚Çà = [-0.25c*T,0.0]\r\nf‚ÇÄ = 1/(D*T) \r\nùêõ(t) = [cos(2œÄ*f‚ÇÄ*(t-t‚Çö)),sin(2œÄ*f‚ÇÄ*(t-t‚Çö))]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ,ùõè‚ÇÑ,ùõè‚ÇÖ,ùõè‚ÇÜ,ùõè‚Çá,ùõè‚Çà],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ,Œ±‚ÇÑ,Œ±‚ÇÖ,Œ±‚ÇÜ,Œ±‚Çá,Œ±‚Çà],[q])\r\nz = LTIreceiverO(r,ùê©·µ£)\r\nt=0.0:T/500:D*T\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t),ylims=(minimum(z(t)),maximum(z(t))), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Inverse-Modeling-3","page":"Stationary Directional Source Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Given the scenario C assumptions, we obtained the received signal, mathsfz(t). Now we can estimate the reflector function by considering the transmitted signal as a pulse train as follows","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsfp(t)=_k=1^MŒ¥(t-mathrmt_p-(k-1)mathrmT)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"as follows","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"In order to consider the transmitted time of the time-varying beam with respect to each periodic pulse, we computed the reflector function as follows","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"mathsff_k(bmxi)=dfracmathsfzleft(mathrmt_p+(k-1)mathrmT+frac2bmxi-mathbfp_mathrmsmathrmcright)mathrmD_mathrmsk(bmxi)mathsfA^2big(fracbmxi-mathbfp_mathrmsmathrmcbig)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"where mathrmD_mathrmsk(bmxi) = mathbfGbig((ùêõ(mathrmt_p+(k-1)mathrmT) bmxi-mathbfp_mathrms)big) ","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"Finally, the reflector function for the scenario is given as follows","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"hatmathsff(bmxi) = _k=1^M mathsff_k(bmxi)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£ = [0.0, 0.0]\r\nt‚Çö = 1.0e-06 \r\nT  = 15.0e-6 \r\nD = 4 \r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-07)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [0.21c*T,0.0]\r\nŒ±‚ÇÇ = -0.7; ùõè‚ÇÇ = [0.0,0.10c*T] \r\nŒ±‚ÇÉ = -0.7; ùõè‚ÇÉ = [-0.22c*T,0.0]\r\nŒ±‚ÇÑ = -0.7; ùõè‚ÇÑ = [0.0,-0.15c*T]  \r\nŒ±‚ÇÖ = -0.7; ùõè‚ÇÖ = [0.18c*T,0.0]\r\nŒ±‚ÇÜ = -0.7; ùõè‚ÇÜ = [0.0,0.13c*T]\r\nŒ±‚Çá = -0.7; ùõè‚Çá = [0.0,-0.12c*T]\r\nŒ±‚Çà = -0.7; ùõè‚Çà = [-0.25c*T,0.0]\r\nf‚ÇÄ = 1/(D*T) \r\nùêõ(t) = [cos(2œÄ*f‚ÇÄ*(t-t‚Çö)),sin(2œÄ*f‚ÇÄ*(t-t‚Çö))]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ,ùõè‚ÇÑ,ùõè‚ÇÖ,ùõè‚ÇÜ,ùõè‚Çá,ùõè‚Çà],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ,Œ±‚ÇÑ,Œ±‚ÇÖ,Œ±‚ÇÜ,Œ±‚Çá,Œ±‚Çà],[q])\r\nz = LTIreceiverO(r,ùê©·µ£)\r\nD‚Çõ‚Çñ(Œæ::Vector{Float64},k::Int64) = G(angleBetween(ùêõ(t‚Çö+(k-1)*T), Œæ.-ùê©‚Çõ))\r\nf‚Çñ(Œæ::Vector{Float64},k::Int64) = ifelse(norm(Œæ)>c*T/2, NaN, (z(t‚Çö+(k-1)*T+(2norm(Œæ-ùê©‚Çõ))./c).*D‚Çõ‚Çñ(Œæ,k)./(A(norm(Œæ-ùê©‚Çõ)/c))^2)) \r\ng(Œæ::Vector{Float64}) = sum(f‚Çñ(Œæ,k) for k ‚àà 1:D)\r\ninversePlot2D([q],r,[z],g)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-D-(More-General-Case)-[Pulse-train,-multiple-reflector,-transmitter-and-receiver-at-same-location]","page":"Stationary Directional Source Modeling","title":"Scenario D (More General Case) [Pulse train, multiple reflector, transmitter and receiver at same location]","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-Assumptions-4","page":"Stationary Directional Source Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"single stationary directional source with time-varying beam center\nsingle stationary receiver at same location as the source\nmultiple stationary ideal point reflectors\nthe source emits a periodic impulse train","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Forward-Modeling-4","page":"Stationary Directional Source Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£ = [0.0, 0.0]\r\nt‚Çö = 1.0e-06 \r\nT  = 15.0e-6 \r\nD = 30 \r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-07)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [0.21c*T,0.0]\r\nŒ±‚ÇÇ = -0.7; ùõè‚ÇÇ = [0.18c*T,0.12c*T] \r\nŒ±‚ÇÉ = -0.7; ùõè‚ÇÉ = [-0.22c*T,0.22c*T]\r\nŒ±‚ÇÑ = -0.7; ùõè‚ÇÑ = [0.0,-0.15c*T]  \r\nŒ±‚ÇÖ = -0.7; ùõè‚ÇÖ = [0.18c*T,0.18c*T]\r\nŒ±‚ÇÜ = -0.7; ùõè‚ÇÜ = [0.0,0.13c*T]\r\nŒ±‚Çá = -0.7; ùõè‚Çá = [-0.10c*T,-0.12c*T]\r\nŒ±‚Çà = -0.7; ùõè‚Çà = [-0.25c*T,0.0]\r\nf‚ÇÄ = 1/(D*T) \r\nùêõ(t) = [cos(2œÄ*f‚ÇÄ*(t-t‚Çö)),sin(2œÄ*f‚ÇÄ*(t-t‚Çö))]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ,ùõè‚ÇÑ,ùõè‚ÇÖ,ùõè‚ÇÜ,ùõè‚Çá,ùõè‚Çà],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ,Œ±‚ÇÑ,Œ±‚ÇÖ,Œ±‚ÇÜ,Œ±‚Çá,Œ±‚Çà],[q])\r\nz = LTIreceiverO(r,ùê©·µ£)\r\nt=0.0:T/500:D*T\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t),ylims=(minimum(z(t)),maximum(z(t))), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Inverse-Modeling-4","page":"Stationary Directional Source Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£ = [0.0, 0.0]\r\nt‚Çö = 1.0e-06 \r\nT  = 15.0e-6 \r\nD = 30 \r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-07)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [0.21c*T,0.0]\r\nŒ±‚ÇÇ = -0.7; ùõè‚ÇÇ = [0.18c*T,0.12c*T] \r\nŒ±‚ÇÉ = -0.7; ùõè‚ÇÉ = [-0.22c*T,0.22c*T]\r\nŒ±‚ÇÑ = -0.7; ùõè‚ÇÑ = [0.0,-0.15c*T]  \r\nŒ±‚ÇÖ = -0.7; ùõè‚ÇÖ = [0.18c*T,0.18c*T]\r\nŒ±‚ÇÜ = -0.7; ùõè‚ÇÜ = [0.0,0.13c*T]\r\nŒ±‚Çá = -0.7; ùõè‚Çá = [-0.10c*T,-0.12c*T]\r\nŒ±‚Çà = -0.7; ùõè‚Çà = [-0.25c*T,0.0]\r\nf‚ÇÄ = 1/(D*T) \r\nùêõ(t) = [cos(2œÄ*f‚ÇÄ*(t-t‚Çö)),sin(2œÄ*f‚ÇÄ*(t-t‚Çö))]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/64)\r\nq = STATsourceD(ùê©‚Çõ,p,ùêõ,G)\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ,ùõè‚ÇÑ,ùõè‚ÇÖ,ùõè‚ÇÜ,ùõè‚Çá,ùõè‚Çà],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ,Œ±‚ÇÑ,Œ±‚ÇÖ,Œ±‚ÇÜ,Œ±‚Çá,Œ±‚Çà],[q])\r\nz = LTIreceiverO(r,ùê©·µ£)\r\nD‚Çõ‚Çñ(Œæ::Vector{Float64},k::Int64) = G(angleBetween(ùêõ(t‚Çö+(k-1)*T), Œæ.-ùê©‚Çõ))\r\nf‚Çñ(Œæ::Vector{Float64},k::Int64) = ifelse(norm(Œæ)>c*T/2, NaN, (z(t‚Çö+(k-1)*T+(2norm(Œæ-ùê©‚Çõ))./c).*D‚Çõ‚Çñ(Œæ,k)./(A(norm(Œæ-ùê©‚Çõ)/c))^2)) \r\ng(Œæ::Vector{Float64}) = sum(f‚Çñ(Œæ,k) for k ‚àà 1:D)\r\ninversePlot2D([q],r,[z],g)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-E-[Pulse-train,-multiple-reflector,-transmitter-and-receiver-at-same-location]","page":"Stationary Directional Source Modeling","title":"Scenario E [Pulse train, multiple reflector, transmitter and receiver at same location]","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/#Scenario-Assumptions-5","page":"Stationary Directional Source Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"single stationary source \nsingle stationary directional receiver with time-varying beam center\nmultiple stationary ideal point reflectors\nthe source emits a periodic impulse train","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Forward-Modeling-5","page":"Stationary Directional Source Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nT  = 15.0e-6 \r\nùê©‚Çõ = [0.01c*T, 0.0]\r\nùê©·µ£ = [-0.06c*T, 0.0]\r\nt‚Çö = 1.0e-06 \r\nD = 32\r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-07)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [0.2c*T,0.10c*T]\r\nŒ±‚ÇÇ = -0.7; ùõè‚ÇÇ = [-0.15c*T,0.08c*T]\r\nŒ±‚ÇÉ = -0.7; ùõè‚ÇÉ = [-0.11c*T,0.2c*T]\r\nŒ±‚ÇÑ = -0.7; ùõè‚ÇÑ = [-0.05c*T,-0.12c*T]\r\nf‚ÇÄ = 1/(D*T) \r\nùêõ(t) = [cos(2œÄ*f‚ÇÄ*(t-t‚Çö)),sin(2œÄ*f‚ÇÄ*(t-t‚Çö))]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/2D)\r\nq = LTIsourceO(ùê©‚Çõ,p)\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ,ùõè‚ÇÑ],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ,Œ±‚ÇÑ],[q])\r\nz = STATreceiverD(r,ùê©·µ£,ùêõ,G)\r\nt=0.0:T/500:D*T\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t),ylims=(minimum(z(t)),maximum(z(t))), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/#Inverse-Modeling-5","page":"Stationary Directional Source Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"using LTVsystems\r\nusing Plots\r\nT  = 15.0e-6 \r\nùê©‚Çõ = [0.01c*T, 0.0]\r\nùê©·µ£ = [-0.06c*T, 0.0]\r\nt‚Çö = 1.0e-06 \r\nD = 32\r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-07)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [0.2c*T,0.10c*T]\r\nŒ±‚ÇÇ = -0.7; ùõè‚ÇÇ = [-0.15c*T,0.08c*T]\r\nŒ±‚ÇÉ = -0.7; ùõè‚ÇÉ = [-0.11c*T,0.2c*T]\r\nŒ±‚ÇÑ = -0.7; ùõè‚ÇÑ = [-0.05c*T,-0.12c*T]\r\nf‚ÇÄ = 1/(D*T) \r\nùêõ(t) = [cos(2œÄ*f‚ÇÄ*(t-t‚Çö)),sin(2œÄ*f‚ÇÄ*(t-t‚Çö))]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/2D)\r\nq = LTIsourceO(ùê©‚Çõ,p)\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ,ùõè‚ÇÑ],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ,Œ±‚ÇÑ],[q])\r\nz = STATreceiverD(r,ùê©·µ£,ùêõ,G)\r\nD·µ£‚Çñ(Œæ::Vector{Float64},k::Int64) = G(angleBetween(ùêõ(t‚Çö+(k-1)*T.+(norm(Œæ-ùê©‚Çõ).+ norm(ùê©·µ£.-Œæ))./c), ùê©·µ£.-Œæ))\r\n\r\nf‚Çñ(Œæ::Vector{Float64},k::Int64) = ifelse(norm(Œæ)>c*T/2, NaN, (z(t‚Çö+(k-1)*T.+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£-Œæ))./c).*D·µ£‚Çñ(Œæ,k))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c)))\r\ng(Œæ::Vector{Float64}) = sum(f‚Çñ(Œæ,k) for k ‚àà 1:D)\r\ninversePlot2D([q],r,[z],g)","category":"page"},{"location":"stationaryDirectionSource/stationaryDirSource/","page":"Stationary Directional Source Modeling","title":"Stationary Directional Source Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#LTI-Directional-Modeling","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Symbol Type Description\nmathbfb_mathrms vector source beam center\nmathbfb_mathrmr vector receiver beam center\nTheta scalar angle relative to beam center\nmathrmG_mathrms(Theta) scalar function of angle Gain of the source antenna\nmathrmG_mathrmr(Theta) scalar function of angle Gain of the receiver antenna\nmathrmD_mathrmsbig(bmximathbfp_mathrmsmathbfb_mathrmsbig) scalar function of position directivity of source\nmathsfhbig(bmxitmathbfp_mathrmsmathbfb_mathrmsbig) scalar function of position and time LTI impulse response from    mathbfp_mathrms to  bmxi\nmathrmD_mathrmrbig(bmximathbfp_mathrmrmathbfb_mathrmrbig) scalar function of position directivity of receiver\nmathsfgbig(bmxitmathbfp_mathrmrmathbfb_mathrmrbig) scalar function of position and time LTI impulse response from    bmxi to mathbfp_mathrmr","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"The LTI impulse response from mathbfp_mathrms to  bmxi is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfh(bmxitmathbfp_mathrmsmathbfb_mathrms) = mathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) deltaleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"where mathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright) is the directional gain defined by ","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathrmD_mathrmsleft(bmxitextcolormyLightSlateGrey\r\nmathbfp_mathrmsmathbfb_mathrmsright)= mathrmG_mathrms\r\nleft(mathbfbbmxi-mathbfp_mathrmsright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"beginaligned\r\nmathsfq(bmxit)  = mathsfp(t) oversett* mathsfh(bmxitmathbfp_mathrmsmathbfb_mathrms) \r\n               =mathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright)\r\n               mathsfAleft(fracbmxi-mathbfp_mathrms\r\n               mathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)\r\nendaligned","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"The reflection due to source is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfr(bmxit) = mathsff(bmxi) mathsfq(bmxit)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"The LTI impulse response from an arbitrary position bmxi to the receiver at position mathbfp_mathrmr is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfg(bmxitmathbfp_mathrmrmathbfb_mathrmr) = mathrmD_mathrmrleft(bmximathbfp_mathrmrmathbfb_mathrmrright) mathsfAleft(fracmathbfp_mathrmr-bmximathrmcright) deltaleft(t-fracmathbfp_mathrmr-bmximathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"where mathrmD_mathrmrleft(bmximathbfp_mathrmrmathbfb_mathrmrright) is the directional gain defined by ","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathrmD_mathrmrleft(bmxitextcolormyLightSlateGrey\r\nmathbfp_mathrmrmathbfb_mathrmrright)= mathrmG_mathrmr\r\nleft(mathbfbbmxi-mathbfp_mathrmrright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"The signal observed at mathbfp_mathrmr due to the reflection from the position bmxi is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"beginaligned\r\nmathsfpsi(bmxit) = mathsfr(bmxit) oversett* mathsfgbig(bmxitmathbfp_mathrmrmathbfb_mathrmrbig) \r\n                 = mathrmD_mathrmrleft(bmximathbfp_mathrmrmathbfb_mathrmrright)\r\n                 mathsfAleft(fracmathbfp_mathrmr-bmximathrmcright) mathsfrleft(bmxit-fracmathbfp_mathrmr-bmximathrmcright)\r\nendaligned","category":"page"},{"location":"directionalLTI/dirLTIsource/#Scenario-A-[Single-pulse,-single-reflector,-transmitter-and-receiver-at-same-location-with-single-beam-direction]","page":"LTI Directional Modeling","title":"Scenario A [Single pulse, single reflector, transmitter and receiver at same location with single beam direction]","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/#Scenario-Assumptions","page":"LTI Directional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"single stationary directional source\nsingle stationary directional receiver at same location as the source\nsingle stationary ideal point reflector\nthe source emits a pulse","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario A.","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Forward-Modeling","page":"LTI Directional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"For scenario A, we provided the position of the directional source ùê©‚Çõ, the directional receiver's position ùê©·µ£, being at the same location (ùê©‚Çõ=ùê©·µ£), the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"We compute the reflection due to the directional source as follows","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) with (ùê©‚Çõ=ùê©·µ£) is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfz(t) = mathsfalpha_0 mathrmD^2_\r\nmathrmrleft(bmxi_0mathbfp_mathrmr\r\nmathbfb_mathrmrright)mathsfA^2\r\nleft(fracmathbfp_mathrmr-bmxi_0\r\nmathrmcright)mathsfpleft(t -2fracmathbfp_mathrmr-bmxi_0mathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\nt‚Çö = 1.0e-06 \r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/6)\r\nq = LTIsourceDTI(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverDTI([r],ùê©·µ£,ùêõ,G)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Inverse-Modeling","page":"LTI Directional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Given the scenario A assumptions, we obtained the received signal, mathsfz(t). Now we can estimate the reflector function by considering the transmitted signal as follows ","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfp(t)=Œ¥(t-mathrmt_p)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"hatmathsff(bmxi) = dfracmathsfzleft(mathrmt_p+frac2bmxi-mathbfp_mathrmrmathrmcright)mathrmD^2_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmrright)\r\nmathsfA^2big(fracbmxi-mathbfp_mathrmrmathrmcbig) \r\n","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\nt‚Çö = 1.0e-06 \r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/6)\r\nq = LTIsourceDTI(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverDTI([r],ùê©·µ£,ùêõ,G)\r\nD(Œæ::Vector{Float64}) = G(angleBetween(ùêõ, Œæ.-ùê©‚Çõ))\r\nf(Œæ::Vector{Float64}) = (z(t‚Çö+ 2(norm(Œæ-ùê©‚Çõ))/c).*(D(Œæ::Vector{Float64}))^2)/(A(norm(Œæ-ùê©‚Çõ)/c))^2\r\ninversePlot2D([q],[r],[z],f)                        ","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Scenario-B-[Single-pulse,-single-reflector,-transmitter-and-receiver-at-different-location-with-single-beam-direction]","page":"LTI Directional Modeling","title":"Scenario B [Single pulse, single reflector, transmitter and receiver at different location with single beam direction]","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/#Scenario-Assumptions-2","page":"LTI Directional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"single stationary directional source\nsingle stationary directional receiver\nsingle stationary ideal point reflector\nthe source emits a pulse","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario B.","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Forward-Modeling-2","page":"LTI Directional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"For scenario B, we provided the position of the directional source ùê©‚Çõ, the directional receiver's position ùê©·µ£, the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"We compute the reflection due to the directional source as follows","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfz(t) = mathsfalpha_0 mathrmD_mathrmrleft(bmxi_0mathbfp_mathrmr\r\nmathbfb_mathrmrright) mathrmD_mathrmsleft(bmxi_0mathbfp_mathrms\r\nmathbfb_mathrmsright)\r\nmathsfAleft(fracmathbfp_mathrmr-bmxi_0mathrmcright)\r\nmathsfAleft(fracbmxi_0-\r\nmathbfp_mathrmsmathrmcright) mathsfpleft(t-\r\nfracmathbfp_mathrmr-bmxi_0+bmxi_0-\r\nmathbfp_mathrmsmathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  [1.5e-06c, 0.0]\r\nt‚Çö = 1.0e-06 \r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/6)\r\nq = LTIsourceDTI(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverDTI([r],ùê©·µ£,ùêõ,G)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Inverse-Modeling-2","page":"LTI Directional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Given the scenario B assumptions, we obtained the received signal, mathsfz(t). Now we can estimate the reflector function by considering the transmitted signal as follows ","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfp(t)=Œ¥(t-mathrmt_p)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"hatmathsff(bmxi) = dfracmathsfzleft(mathrmt_p+fracmathbfp_mathrmr-\r\nbmxi+bmxi-mathbfp_mathrms\r\nmathrmc  right)mathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright)\r\nmathrmD_mathrmrleft(bmximathbfp_mathrmrmathbfb_mathrmrright)mathsfAbig(fracbmxi-mathbfp_mathrmsmathrmcbig)    \r\nmathsfAbig(fracmathbfp_mathrmr-bmximathrmcbig)\r\n","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  [1.5e-06c, 0.0]\r\nt‚Çö = 1.0e-06 \r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/6)\r\nq = LTIsourceDTI(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverDTI([r],ùê©·µ£,ùêõ,G)\r\nD·µ£(Œæ::Vector{Float64}) = G(angleBetween(ùêõ, Œæ.-ùê©·µ£))\r\nD‚Çõ(Œæ::Vector{Float64}) = G(angleBetween(ùêõ, Œæ.-ùê©‚Çõ))\r\nf(Œæ::Vector{Float64}) = (z(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£-Œæ))./c).*D‚Çõ(Œæ::Vector{Float64}).*D·µ£(Œæ::Vector{Float64}))/\r\n                        (A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c))\r\ninversePlot2D([q],[r],[z],f)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Scenario-C-[Pulse-train,-single-reflector,-transmitter-and-receiver-at-same-location-with-single-beam-direction-and-random-white-noise]","page":"LTI Directional Modeling","title":"Scenario C [Pulse train, single reflector, transmitter and receiver at same location with single beam direction and random white noise]","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/#Scenario-Assumptions-3","page":"LTI Directional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"single stationary directional source \nsingle stationary directional receiver at the same location as source\nsingle ideal point reflector\nthe source emits pulse train with single beam ","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario C.","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Forward-Modeling-3","page":"LTI Directional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"For scenario A, we provided the position of the directional source ùê©‚Çõ, the directional receiver's position ùê©·µ£, being at the same location (ùê©‚Çõ=ùê©·µ£), the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"We compute the reflection due to the directional source as follows","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathrmD_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) with (ùê©‚Çõ=ùê©·µ£) is given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfz(t) = mathsfalpha_0 mathrmD^2_\r\nmathrmsleft(bmxi_0mathbfp_mathrms\r\nmathbfb_mathrmrright)mathsfA^2\r\nleft(fracmathbfp_mathrmr-bmxi_0\r\nmathrmcright)mathsfpleft(t -2fracmathbfp_mathrmr-bmxi_0mathrmcright)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  [0.0, 0.0]\r\nT  = 15.0e-6\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-7)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/6)\r\nq = LTIsourceDTI(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,q)\r\nz = LTIreceiverDTI([r],ùê©·µ£,ùêõ,G)\r\nt=0.0:T/100:5T\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"directionalLTI/dirLTIsource/#Inverse-Modeling-3","page":"LTI Directional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Given the scenario C assumptions, we obtained the received signal, mathsfz(t). Now we can estimate the reflector function by considering the transmitted signal as pulse train given by","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsfp(t)=Œ¥(mathrmmod(t-mathrmt_pmathrmT))","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"We computed the reflector function, mathsff_k with respect to the pulse train, kmathrmT where k in mathbfZ and T is the pulse repetition rate, along with the random white noise as follows","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"mathsff_k(bmxi)=dfracmathsfzleft(mathrmt_p+kT+fracmathbfp_mathrmr-bmxi+bmxi-mathbfp_mathrms\r\nmathrmcright)mathrmD^2_mathrmsleft(bmximathbfp_mathrmsmathbfb_mathrmsright)mathsfAbig(fracbmxi-mathbfp_mathrmsmathrmcbig)    \r\nmathsfAbig(fracmathbfp_mathrmr-bmximathrmcbig)","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"Finally, the reflector function is given as follows","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"hatmathsff(bmxi) = frac_k=0^M-1 mathsff_k(bmxi)M","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  [0.0, 0.0]\r\nT  = 15.0e-6\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-7)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/6)\r\nq = LTIsourceDTI(ùê©‚Çõ,p,ùêõ,G)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,q)\r\nz = LTIreceiverDTI([r],ùê©·µ£,ùêõ,G)\r\nD‚Çõ(Œæ::Vector{Float64}) = G(angleBetween(ùêõ, Œæ.-ùê©‚Çõ))\r\nf‚ÇÅ(Œæ::Vector{Float64})=ifelse(norm(Œæ)>c*T/2, NaN, (0.25e-08randn(1)[1]+ z(t‚Çö+0*T+(2norm(Œæ-ùê©‚Çõ))./c).*(D‚Çõ(Œæ))^2 ./(A(norm(Œæ-ùê©‚Çõ)/c))^2))\r\nf‚ÇÇ(Œæ::Vector{Float64})=ifelse(norm(Œæ)>c*T/2, NaN, (0.25e-08randn(1)[1]+z(t‚Çö+1*T+(2norm(Œæ-ùê©‚Çõ))./c).*(D‚Çõ(Œæ))^2 ./(A(norm(Œæ-ùê©‚Çõ)/c))^2))\r\nf‚ÇÉ(Œæ::Vector{Float64})=ifelse(norm(Œæ)>c*T/2, NaN, (0.25e-08randn(1)[1]+ z(t‚Çö+2*T+(2norm(Œæ-ùê©‚Çõ))./c).*(D‚Çõ(Œæ))^2 ./(A(norm(Œæ-ùê©‚Çõ)/c))^2))\r\nf‚ÇÑ(Œæ::Vector{Float64})=ifelse(norm(Œæ)>c*T/2, NaN, (0.25e-08randn(1)[1]+ z(t‚Çö+3*T+(2norm(Œæ-ùê©‚Çõ))./c).*(D‚Çõ(Œæ))^2 ./(A(norm(Œæ-ùê©‚Çõ)/c))^2))\r\nf‚ÇÖ(Œæ::Vector{Float64})=ifelse(norm(Œæ)>c*T/2, NaN, (0.25e-08randn(1)[1]+ z(t‚Çö+4*T+(2norm(Œæ-ùê©‚Çõ))./c).*(D‚Çõ(Œæ))^2 ./(A(norm(Œæ-ùê©‚Çõ)/c))^2))\r\nf(Œæ::Vector{Float64}) = (f‚ÇÅ(Œæ).+f‚ÇÇ(Œæ).+f‚ÇÉ(Œæ).+f‚ÇÑ(Œæ).+f‚ÇÖ(Œæ))/5\r\np11=inversePlot2D([q],[r],[z],f‚ÇÅ)\r\np12=inversePlot2D([q],[r],[z],f‚ÇÇ)\r\np13=inversePlot2D([q],[r],[z],f‚ÇÉ)\r\np14=inversePlot2D([q],[r],[z],f‚ÇÑ)\r\np15=inversePlot2D([q],[r],[z],f‚ÇÖ)\r\np6=inversePlot2D([q],[r],[z],f)\r\nplot(p11,p12,p13,p14,p15,p6,layout=(3,2),size=(1000,1000))","category":"page"},{"location":"directionalLTI/dirLTIsource/","page":"LTI Directional Modeling","title":"LTI Directional Modeling","text":"(Image: )","category":"page"},{"location":"receivers/receiver/#Receivers","page":"Receivers","title":"Receivers","text":"","category":"section"},{"location":"receivers/receiver/#LTI-Omnidirectional-Receiver","page":"Receivers","title":"LTI Omnidirectional Receiver","text":"","category":"section"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"In order to define LTI Omnidirectional Receiver, first we observed the signal due to the reflection which is given by taking convolution between the reflected signal, mathsfr(bmxit) and the impulse response from the receiver located at position, mathbfp_mathrmr. Mathematically, we can define the observed signal as follows","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"mathsfpsi(bmxit) = mathsfr(bmxit) oversett* mathsfgbig(bmxitmathbfp_mathrmr(cdot)big)","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"(Image: )","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"Finally, the observed signal, mathsfz(t) is parameterized by considering all the reflections at the receiver location. Mathematically, we can given the expression for the final observed signal as follows","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"mathsfz(t) =  mathsfpsi(bmxit) dS","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"(Image: )","category":"page"},{"location":"receivers/receiver/#Defining-an-LTI-Omnidirectional-Receiver","page":"Receivers","title":"Defining an LTI Omnidirectional Receiver","text":"","category":"section"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"First, we will define the reflected signal by  calling LTIsourceO() with a transmitted signal, mathsfp(t) and the source position, mathbfp_mathrms. Then we can define a  LTI Omnidirectional Receiver by calling LTIreceiverO() with the defined reflected signal and the receiver position, mathbfp_mathrmr.","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"(Image: )","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"using LTVsystems\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\np(t) = Œ¥n(t,1.0e-10)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [1.8,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)","category":"page"},{"location":"receivers/receiver/#LTI-Directional-Receiver","page":"Receivers","title":"LTI Directional Receiver","text":"","category":"section"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"An LTI Directional Receiver is parameterized by accounting the direction of the antenna which is defined by directional gain,","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"mathrmD_mathrmrleft(bmxitextcolormyLightSlateGrey\r\nmathbfp_mathrmrmathbfb_mathrmrright)= mathrmG_mathrmr\r\nleft(mathbfbbmxi-mathbfp_mathrmrright)","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"where  returns the angle between the two arguments and mathrmG_mathrmr(Theta) is the receiver antenna's textitvoltage gain as a function of angle Theta relative to the beam center mathbfb_mathrmr.","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"We define an LTI Directional Receiver by observing the signal due to the reflection given by taking convolution between the reflected signal, mathsfr(bmxit) and the impulse response from the receiver located at position, mathbfp_mathrmr. Mathematically, we can define the observed signal as follows.","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"mathsfpsi(bmxit)=mathsfr(bmxit) oversett* mathsfg(bmxit\r\ntextcolormyLightSlateGreymathbfp_mathrmrmathbfb_mathrmr)","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"(Image: )","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"Finally, the observed signal, mathsfz(t) is parameterized by considering all the reflections at the receiver location. Mathematically, we can given the expression for the final observed signal as follows","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"mathsfz(t) =  mathsfpsi(bmxit) dS","category":"page"},{"location":"receivers/receiver/#Defining-an-LTI-Directional-Receiver","page":"Receivers","title":"Defining an LTI Directional Receiver","text":"","category":"section"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"we can define a  LTI Directional Receiver by calling LTIreceiverDTI() with the defined reflected signal and the receiver position, mathbfp_mathrmr.","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"(Image: )","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"using LTVsystems\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\np(t) = Œ¥n(t,1.0e-10)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/8)\r\nq = LTIsourceDTI(ùê©‚Çõ, p, ùêõ, G)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [1.8,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverDTI([r],ùê©·µ£,ùêõ,G)","category":"page"},{"location":"receivers/receiver/#Stationary-Directional-Receiver","page":"Receivers","title":"Stationary Directional Receiver","text":"","category":"section"},{"location":"receivers/receiver/#Stationary-Directional-Receiver-with-Time-Varying-Beam-Center","page":"Receivers","title":"Stationary Directional Receiver with Time-Varying Beam Center","text":"","category":"section"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"Mathematically, a Stationary Directional Receiver with time-varying beam center is given as follows.","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"mathsfpsi(bmxit)=mathsfr(bmxit) oversett* mathsfg(bmxit\r\ntextcolormyLightSlateGreymathbfp_mathrmrmathbfb_mathrmr(t))","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"(Image: )","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"Finally, the observed signal, mathsfz(t) is parameterized by considering all the reflections at the receiver location. Mathematically, we can given the expression for the final observed signal as follows","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"mathsfz(t) =  mathsfpsi(bmxit) dS","category":"page"},{"location":"receivers/receiver/#Defining-an-Stationary-Directional-Receiver","page":"Receivers","title":"Defining an Stationary Directional Receiver","text":"","category":"section"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"we can define a  Stationary Directional Receiver with time-varying beam center by calling STATreceiverD() with the defined reflected signal and the receiver position, mathbfp_mathrmr.","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"(Image: )","category":"page"},{"location":"receivers/receiver/","page":"Receivers","title":"Receivers","text":"using LTVsystems\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\np(t) = Œ¥n(t,1.0e-10)\r\nùêõ(t) = [cos(2œÄ*10*t),0.0]/(norm(cos(2œÄ*10*t)))\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/8)\r\nq = STATsourceD(ùê©‚Çõ, p, ùêõ, G)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [1.8,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = STATreceiverD([r],ùê©·µ£,ùêõ,G)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#LTI-Omnidirectional-Modeling","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Symbol Type Description\nt scalar variable time\nbmxi vector variable position\nmathbfp_mathrms vector position of source\nmathbfp_mathrmr vector position of receiver\nmathsfp(t) scalar function of time source emission\nmathsff(bmxi) scalar function of position reflectivity function\nmathsfh(bmxitmathbfp_mathrms) scalar function of position and time LTI impulse response from    mathbfp_mathrms to  bmxi\nmathsfq(bmxit) scalar function of position and time observation of source emission at bmxi\nmathsfr(bmxit) scalar function of position and time reflection from bmxi due to source\nmathsfg(bmxitmathbfp_mathrmr) scalar function of position and time LTI impulse response from    bmxi to mathbfp_mathrmr\nmathsfpsi(bmxit) scalar function of position and time observation of reflections from bmxi at mathbfp_mathrmr\nmathsfz(t) scalar function of time observation of reflections at mathbfp_mathrmr","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"The LTI impulse response from mathbfp_mathrms to  bmxi is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfh(bmxitmathbfp_mathrms) = mathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) deltaleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"The signal observed at position bmxi and time t due to the source emitting from position mathbfp_mathrms is given as","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"beginaligned\r\nmathsfq(bmxit)  = mathsfp(t) oversett* mathsfh(bmxitmathbfp_mathrms) \r\n               = mathrmAleft(fracbmxi-mathbfp_mathrms\r\n               mathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)\r\nendaligned","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"The reflection due to source is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfr(bmxit) = mathsff(bmxi) mathsfq(bmxit)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"The LTI impulse response from an arbitrary position bmxi to the receiver at position mathbfp_mathrmr is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfg(bmxitmathbfp_mathrmr) = mathsfAleft(fracmathbfp_mathrmr-bmximathrmcright) deltaleft(t-fracmathbfp_mathrmr-bmximathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"The signal observed at mathbfp_mathrmr due to the reflection from the position bmxi is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"beginaligned\r\nmathsfpsi(bmxit) = mathsfr(bmxit) oversett* mathsfgbig(bmxitmathbfp_mathrmrbig) \r\n                 = mathsfAleft(fracmathbfp_mathrmr-bmximathrmcright) mathsfrleft(bmxit-fracmathbfp_mathrmr-bmximathrmcright)\r\nendaligned","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-A-[Single-pulse,-single-reflector,-transmitter-and-receiver-at-same-location]","page":"LTI Omnidirectional Modeling","title":"Scenario A [Single pulse, single reflector, transmitter and receiver at same location]","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-Assumptions","page":"LTI Omnidirectional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"single stationary omnidirectional source\nsingle stationary omnidirectional receiver at same location as the source\nsingle stationary ideal point reflector\nthe source emits a pulse","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario A.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Forward-Modeling","page":"LTI Omnidirectional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"For scenario A, we provided the position of the source ùê©‚Çõ, the receiver's position ùê©·µ£, being at the same location (ùê©‚Çõ=ùê©·µ£), the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"We compute the reflection due to the source as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) with (ùê©‚Çõ=ùê©·µ£) is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfz(t) = mathsfalpha_0 mathsfA^2\r\nleft(fracmathbfp_mathrmr-bmxi_0\r\nmathrmcright)mathsfpleft(t -2fracmathbfp_mathrmr-bmxi_0mathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems, Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1),size=(800,800))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Inverse-Modeling","page":"LTI Omnidirectional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the scenario A assumptions, we obtained the received signal, mathsfz(t).  Now by considering the transmitted singal as ","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfp(t)=Œ¥(t-t_mathrmp)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"we can estimate the reflector function as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"hatmathsff(bmxi) = dfracmathsfzleft(t_mathrmp+frac2bmxi-mathbfp_mathrmrmathrmcright)\r\nmathsfA^2big(fracbmxi-mathbfp_mathrmrmathrmcbig)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems, Plots\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£ =  ùê©‚Çõ\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nf(Œæ::Vector{Float64}) = z(t‚Çö.+ 2(norm(Œæ-ùê©‚Çõ))/c)/(A(norm(Œæ-ùê©‚Çõ)/c))^2\r\ninversePlot2D([q],[r],[z],f)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-B-[Single-pulse,-single-reflector,-transmitter-and-receiver-at-different-location]","page":"LTI Omnidirectional Modeling","title":"Scenario B [Single pulse, single reflector, transmitter and receiver at different location]","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-Assumptions-2","page":"LTI Omnidirectional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"single stationary omnidirectional source\nsingle stationary omnidirectional receiver\nsingle stationary ideal point reflector\nthe source emits a pulse","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario B.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Forward-Modeling-2","page":"LTI Omnidirectional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"For scenario B, we provided the position of the source ùê©‚Çõ, the receiver's position ùê©·µ£, the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"We compute the reflection due to the source as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfz(t) = mathsfalpha_0 mathsfAleft(fracmathbfp_mathrmr-bmxi_0mathrmcright)\r\nmathsfAleft(fracbmxi_0-\r\nmathbfp_mathrmsmathrmcright) mathsfpleft(t-\r\nfracmathbfp_mathrmr-bmxi_0+bmxi_0-\r\nmathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ =  [0.75e-06c, 0.0]\r\nùê©·µ£ =  [-3.0e-06c, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1),size=(800,800))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Inverse-Modeling-2","page":"LTI Omnidirectional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the scenario B assumptions, we obtained the received signal, mathsfz(t). Now by considering the transmitted singal as ","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfp(t)=Œ¥(t-t_mathrmp)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"we can estimate the reflector function as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"hatmathsff(bmxi) = dfracmathsfzleft(t_mathrmp+fracmathbfp_mathrmr-\r\nbmxi+bmxi-mathbfp_mathrms\r\nmathrmc  right)mathsfAbig(fracbmxi-mathbfp_mathrmsmathrmcbig)    \r\nmathsfAbig(fracmathbfp_mathrmr-bmximathrmcbig)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ =  [0.75e-06c, 0.0]\r\nùê©·µ£ =  [-3.0e-06c, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nf(Œæ::Vector{Float64})=(z(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ)./c).*A(norm(ùê©·µ£-Œæ)./c))\r\ninversePlot2D([q],[r],[z],f)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-C-[Single-pulse,-multiple-reflector,-transmitter-and-receiver-at-different-location]","page":"LTI Omnidirectional Modeling","title":"Scenario C [Single pulse, multiple reflector, transmitter and receiver at different location]","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-Assumptions-3","page":"LTI Omnidirectional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"single stationary omnidirectional source\nsingle stationary omnidirectional receiver\nmultiple stationary ideal point reflectors\nthe source emits a pulse","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario C.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Forward-Modeling-3","page":"LTI Omnidirectional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"For scenario C, we provided the position of the source ùê©‚Çõ, the receiver's position ùê©·µ£, the transmitted signal mathsfp(t), and multiple stationary reflectors say N.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff(bmxi) = sumlimits_n=1^Nmathsfalpha_n delta(bmxi - bmxi_n)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"We compute the reflection due to the source as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfr(bmxit) = sumlimits_n=1^Nmathsfalpha_n delta(bmxi - bmxi_n)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfz(t) = sumlimits_n=1^N mathsfalpha_n mathsfAleft(fracmathbfp_mathrmr-bmxi_nmathrmcright)\r\nmathsfAleft(fracbmxi_n-mathbfp_mathrmsmathrmcright)\r\nmathsfpleft(t-fracmathbfp_mathrmr-bmxi_n+bmxi_n-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ =  [0.3e-06c, 0.0]\r\nùê©·µ£ =  [-3.0e-06c, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.3e-06c,0.0]\r\nŒ±‚ÇÇ = -0.4; ùõè‚ÇÇ = [1.2e-06c,0.375e-06c]\r\nŒ±‚ÇÉ = -0.5; ùõè‚ÇÉ = [1.5e-06c,-1.5e-06c]\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ],[q])\r\nz = LTIreceiverO(r,ùê©·µ£)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1),size=(800,800))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Inverse-Modeling-3","page":"LTI Omnidirectional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the scenario C assumptions, we obtained the received signal, mathsfz(t). Now by considering the transmitted singal as ","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfp(t)=Œ¥(t-t_mathrmp)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"we can estimate the reflector function as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"hatmathsff(bmxi) = dfracmathsfzleft(t_mathrmp+fracmathbfp_mathrmr-\r\nbmxi+bmxi-mathbfp_mathrmsmathrmcright)\r\nmathsfAbig(fracbmxi-mathbfp_mathrmsmathrmcbig)    \r\nmathsfAbig(fracmathbfp_mathrmr-bmximathrmcbig)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ =  [0.3e-06c, 0.0]\r\nùê©·µ£ =  [-3.0e-06c, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.3e-06c,0.0]\r\nŒ±‚ÇÇ = -0.4; ùõè‚ÇÇ = [1.2e-06c,0.375e-06c]\r\nŒ±‚ÇÉ = -0.5; ùõè‚ÇÉ = [1.5e-06c,-1.5e-06c]\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ],[q])\r\nz = LTIreceiverO(r,ùê©·µ£)\r\nf(Œæ::Vector{Float64})=(z(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+norm(ùê©·µ£-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ)./c).*A(norm(ùê©·µ£-Œæ)./c))\r\ninversePlot2D([q],r,[z],f)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-D-[Single-pulse,-multiple-reflector,-single-transmitter-and-multiple-receiver]","page":"LTI Omnidirectional Modeling","title":"Scenario D [Single pulse, multiple reflector, single transmitter and multiple receiver]","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-Assumptions-4","page":"LTI Omnidirectional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"single stationary omnidirectional source\nmultiple stationary omnidirectional receivers\nmultiple stationary ideal point reflectors\nthe source emits a pulse","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario D.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Forward-Modeling-4","page":"LTI Omnidirectional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"For scenario D, we provided the position of the source ùê©‚Çõ and the multiple receivers's position at mathbfp_mathrmr^(i) where i = 12ldotsM, the transmitted signal, mathsfp(t) and multiple stationary reflectors bmxi_n where n = 12N and M N.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff(bmxi) = sumlimits_n=1^Nmathsfalpha_n delta(bmxi - bmxi_n)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"We compute the reflection due to the source as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfr(bmxit) = sumlimits_n=1^Nmathsfalpha_n delta(bmxi - bmxi_n)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Finally, the closed form expression of the observed signals, mathsfz_i(t) where i = 12M is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfz_i(t) = sumlimits_n=1^N mathsfalpha_n mathsfAleft(fracmathbfp_mathrmr^(i)-bmxi_nmathrmcright)\r\nmathsfAleft(fracbmxi_n-mathbfp_mathrmsmathrmcright)\r\nmathsfpleft(t-fracmathbfp_mathrmr^(i)-bmxi_n+bmxi_n-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£‚ÇÅ =  [-0.45e-06c, 0.0]\r\nùê©·µ£‚ÇÇ =  [0.0, 0.45e-06c]\r\nùê©·µ£‚ÇÉ =  [0.45e-06c, 0.0]\r\nùê©·µ£‚ÇÑ =  [0.0, -0.45e-06c]\r\nùê©·µ£‚ÇÖ =  [0.0, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.5e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [1.2e-06c,1.05e-06c]\r\nŒ±‚ÇÇ = -0.5; ùõè‚ÇÇ = [2.4e-06c,0.0]\r\nŒ±‚ÇÉ = -0.4; ùõè‚ÇÉ = [3.3e-06c,1.5e-06c]\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ],[q])\r\nz‚ÇÅ = LTIreceiverO(r,ùê©·µ£‚ÇÅ)\r\nz‚ÇÇ = LTIreceiverO(r,ùê©·µ£‚ÇÇ)\r\nz‚ÇÉ = LTIreceiverO(r,ùê©·µ£‚ÇÉ)\r\nz‚ÇÑ = LTIreceiverO(r,ùê©·µ£‚ÇÑ)\r\nz‚ÇÖ = LTIreceiverO(r,ùê©·µ£‚ÇÖ)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z‚ÇÅ(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot!(p2,t,z‚ÇÇ(t))\r\nplot!(p2,t,z‚ÇÉ(t))\r\nplot!(p2,t,z‚ÇÑ(t))\r\nplot!(p2,t,z‚ÇÖ(t))\r\nplot(p1,p2,layout=(2,1),size=(800,800))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Inverse-Modeling-4","page":"LTI Omnidirectional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the scenario D assumptions, we obtained the received signals, mathsfz_i(t) where i=12M. Now by considering the transmitted singal as ","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfp(t)=Œ¥(t-t_mathrmp)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"we can estimate the reflector function as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"hatmathsff(bmxi) = left(prodlimits_i=1^Mmathsff_i(bmxi)right)^frac1M","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"where","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff_i(bmxi) = dfracmathsfz_ileft(t_mathrmp+fracmathbfp_mathrmr^(i)- bmxi+bmxi\r\n-mathbfp_mathrms\r\nmathrmcright)mathsfAbig(fracbmxi-mathbfp_mathrmsmathrmcbig)\r\nmathsfAbig(fracmathbfp_mathrmr^(i)-bmximathrmcbig)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ =  [0.0, 0.0]\r\nùê©·µ£‚ÇÅ =  [-0.45e-06c, 0.0]\r\nùê©·µ£‚ÇÇ =  [0.0, 0.45e-06c]\r\nùê©·µ£‚ÇÉ =  [0.45e-06c, 0.0]\r\nùê©·µ£‚ÇÑ =  [0.0, -0.45e-06c]\r\nùê©·µ£‚ÇÖ =  [0.0, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.5e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [1.2e-06c,1.05e-06c]\r\nŒ±‚ÇÇ = -0.5; ùõè‚ÇÇ = [2.4e-06c,0.0]\r\nŒ±‚ÇÉ = -0.4; ùõè‚ÇÉ = [3.3e-06c,1.5e-06c]\r\nr = pointReflector([ùõè‚ÇÅ,ùõè‚ÇÇ,ùõè‚ÇÉ],[Œ±‚ÇÅ,Œ±‚ÇÇ,Œ±‚ÇÉ],[q])\r\nz‚ÇÅ = LTIreceiverO(r,ùê©·µ£‚ÇÅ)\r\nz‚ÇÇ = LTIreceiverO(r,ùê©·µ£‚ÇÇ)\r\nz‚ÇÉ = LTIreceiverO(r,ùê©·µ£‚ÇÉ)\r\nz‚ÇÑ = LTIreceiverO(r,ùê©·µ£‚ÇÑ)\r\nz‚ÇÖ = LTIreceiverO(r,ùê©·µ£‚ÇÖ)\r\nf‚ÇÅ(Œæ::Vector{Float64})=(z‚ÇÅ(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£‚ÇÅ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ)./c).*A(norm(ùê©·µ£‚ÇÅ-Œæ)./c))\r\nf‚ÇÇ(Œæ::Vector{Float64})=(z‚ÇÇ(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£‚ÇÇ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ)./c).*A(norm(ùê©·µ£‚ÇÇ-Œæ)./c))\r\nf‚ÇÉ(Œæ::Vector{Float64})=(z‚ÇÉ(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£‚ÇÉ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ)./c).*A(norm(ùê©·µ£‚ÇÉ-Œæ)./c))\r\nf‚ÇÑ(Œæ::Vector{Float64})=(z‚ÇÑ(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£‚ÇÑ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ)./c).*A(norm(ùê©·µ£‚ÇÑ-Œæ)./c))\r\nf‚ÇÖ(Œæ::Vector{Float64})=(z‚ÇÖ(t‚Çö+(norm(Œæ-ùê©‚Çõ) .+ norm(ùê©·µ£‚ÇÖ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ)./c).*A(norm(ùê©·µ£‚ÇÖ-Œæ)./c))\r\nf(Œæ::Vector{Float64})=(f‚ÇÅ(Œæ).*f‚ÇÇ(Œæ).*f‚ÇÉ(Œæ).*f‚ÇÑ(Œæ).*f‚ÇÖ(Œæ))^1/5\r\np11 = inversePlot2D([q],r,[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ,z‚ÇÑ,z‚ÇÖ],f‚ÇÅ)\r\np12 = inversePlot2D([q],r,[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ,z‚ÇÑ,z‚ÇÖ],f‚ÇÇ)\r\np13 = inversePlot2D([q],r,[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ,z‚ÇÑ,z‚ÇÖ],f‚ÇÉ)\r\np14 = inversePlot2D([q],r,[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ,z‚ÇÑ,z‚ÇÖ],f‚ÇÑ)\r\np15 = inversePlot2D([q],r,[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ,z‚ÇÑ,z‚ÇÖ],f‚ÇÖ)\r\np6 = inversefinalPlot2D([q],[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ,z‚ÇÑ,z‚ÇÖ],f)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-E-[Single-pulse,-single-reflector,-multiple-transmitter-and-receiver-at-different-locations]","page":"LTI Omnidirectional Modeling","title":"Scenario E [Single pulse, single reflector, multiple transmitter and receiver at different locations]","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-Assumptions-5","page":"LTI Omnidirectional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"multiple stationary omnidirectional sources\nmultiple stationary omnidirectional receivers\na stationary ideal point reflector\nthe source emits a pulse","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario E.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Forward-Modeling-5","page":"LTI Omnidirectional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"For scenario E, we provided the positions of multiple sources at mathbfp_mathrms^(i) where i = 12N, the multiple receivers at mathbfp_mathrmr^(i) where i = 12N, the transmitted signal mathsfp(t), and a stationary reflector.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"We compute the reflection due to the sources as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfr_i(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathsfAleft(fracbmxi-bmp_mathrms^(i)\r\nmathrmcright) mathsfpleft(t-fracbmxi-bmp_mathrms^(i)mathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"where i = 12N,","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Finally, the closed form expression of the observed signals, mathsfz_i(t) where i = 12M is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfz_i(t) = mathsfalpha_0 mathsfAleft(fracmathbfp_mathrmr^(i)-bmxi_0mathrmcright)\r\nmathsfAleft(fracbmxi_0-mathbfp_mathrms^(i)mathrmcright)\r\nmathsfpleft(t-fracmathbfp_mathrmr^(i)-bmxi_0+bmxi_0-mathbfp_mathrms^(i)mathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ‚ÇÅ =  [-0.75e-06c, 0.0]\r\nùê©·µ£‚ÇÅ =  [-0.15e-06c, 0.0]\r\nùê©‚Çõ‚ÇÇ =  [0.75e-06c, 0.0]\r\nùê©·µ£‚ÇÇ =  [1.5e-06c, 0.0]\r\nùê©‚Çõ‚ÇÉ =  [2.1e-06c, 0.0]\r\nùê©·µ£‚ÇÉ =  [2.85e-06c, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.5e-07)\r\nq‚ÇÅ = LTIsourceO(ùê©‚Çõ‚ÇÅ, p)\r\nq‚ÇÇ = LTIsourceO(ùê©‚Çõ‚ÇÇ, p)\r\nq‚ÇÉ = LTIsourceO(ùê©‚Çõ‚ÇÉ, p)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.6e-06c,3.6e-06c]\r\nr‚ÇÅ = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,[q‚ÇÅ])\r\nr‚ÇÇ = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,[q‚ÇÇ])\r\nr‚ÇÉ = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,[q‚ÇÉ])\r\nz‚ÇÅ = LTIreceiverO([r‚ÇÅ],ùê©·µ£‚ÇÅ)\r\nz‚ÇÇ = LTIreceiverO([r‚ÇÇ],ùê©·µ£‚ÇÇ)\r\nz‚ÇÉ = LTIreceiverO([r‚ÇÉ],ùê©·µ£‚ÇÉ)\r\nt=0.0:1.0e-08:25.0e-06\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z‚ÇÅ(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot!(p2,t,z‚ÇÇ(t))\r\nplot!(p2,t,z‚ÇÉ(t))\r\nplot(p1,p2,layout=(2,1),size=(800,800))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Inverse-Modeling-5","page":"LTI Omnidirectional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the scenario E assumptions, we obtained the received signals, mathsfz_i(t) where i=12M. Now by considering the transmitted singal as ","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfp(t)=Œ¥(t-t_mathrmp)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"we can estimate the reflector function as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"hatmathsff(bmxi) = left(prodlimits_i=1^Nmathsff_i(bmxi)right)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"where","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff_i(bmxi) = dfracmathsfz_ileft(t_mathrmp+fracmathbfp_mathrmr^(i)- bmxi+bmxi\r\n-bmp_mathrms^(i)\r\nmathrmcright)mathsfAbig(fracbmxi-bmp_mathrms^(i)mathrmcbig)\r\nmathsfAbig(fracmathbfp_mathrmr^(i)-bmximathrmcbig)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nt‚Çö = 1.0e-06\r\nùê©‚Çõ‚ÇÅ =  [-0.75e-06c, 0.0]\r\nùê©·µ£‚ÇÅ =  [-0.15e-06c, 0.0]\r\nùê©‚Çõ‚ÇÇ =  [0.75e-06c, 0.0]\r\nùê©·µ£‚ÇÇ =  [1.5e-06c, 0.0]\r\nùê©‚Çõ‚ÇÉ =  [2.1e-06c, 0.0]\r\nùê©·µ£‚ÇÉ =  [2.85e-06c, 0.0]\r\np(t) = Œ¥n(t-t‚Çö,1.5e-07)\r\nq‚ÇÅ = LTIsourceO(ùê©‚Çõ‚ÇÅ, p)\r\nq‚ÇÇ = LTIsourceO(ùê©‚Çõ‚ÇÇ, p)\r\nq‚ÇÉ = LTIsourceO(ùê©‚Çõ‚ÇÉ, p)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.6e-06c,3.6e-06c]\r\nr‚ÇÅ = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,[q‚ÇÅ])\r\nr‚ÇÇ = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,[q‚ÇÇ])\r\nr‚ÇÉ = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,[q‚ÇÉ])\r\nz‚ÇÅ = LTIreceiverO([r‚ÇÅ],ùê©·µ£‚ÇÅ)\r\nz‚ÇÇ = LTIreceiverO([r‚ÇÇ],ùê©·µ£‚ÇÇ)\r\nz‚ÇÉ = LTIreceiverO([r‚ÇÉ],ùê©·µ£‚ÇÉ)\r\nf‚ÇÅ(Œæ::Vector{Float64})=(z‚ÇÅ(t‚Çö+(norm(Œæ-ùê©‚Çõ‚ÇÅ) .+ norm(ùê©·µ£‚ÇÅ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ‚ÇÅ)./c).*A(norm(ùê©·µ£‚ÇÅ-Œæ)./c))\r\nf‚ÇÇ(Œæ::Vector{Float64})=(z‚ÇÇ(t‚Çö+(norm(Œæ-ùê©‚Çõ‚ÇÇ) .+ norm(ùê©·µ£‚ÇÇ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ‚ÇÇ)./c).*A(norm(ùê©·µ£‚ÇÇ-Œæ)./c))\r\nf‚ÇÉ(Œæ::Vector{Float64})=(z‚ÇÉ(t‚Çö+(norm(Œæ-ùê©‚Çõ‚ÇÉ) .+ norm(ùê©·µ£‚ÇÉ-Œæ))./c))./(A(norm(Œæ-ùê©‚Çõ‚ÇÉ)./c).*A(norm(ùê©·µ£‚ÇÉ-Œæ)./c))\r\nf(Œæ::Vector{Float64})=f‚ÇÅ(Œæ).+f‚ÇÇ(Œæ).+f‚ÇÉ(Œæ)\r\ninversePlot2D([q‚ÇÅ,q‚ÇÇ,q‚ÇÉ],[r‚ÇÅ,r‚ÇÇ,r‚ÇÉ],[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ],f)\r\nf_new(Œæ::Vector{Float64})=f‚ÇÅ(Œæ).*f‚ÇÇ(Œæ).*f‚ÇÉ(Œæ)\r\ninversefinalPlot2D([q‚ÇÅ,q‚ÇÇ,q‚ÇÉ],[z‚ÇÅ,z‚ÇÇ,z‚ÇÉ],f_new)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-F-[Pulse-train,-single-reflector,-transmitter-and-receiver-at-same-location,-random-noise]","page":"LTI Omnidirectional Modeling","title":"Scenario F [Pulse train, single reflector, transmitter and receiver at same location, random noise]","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Scenario-Assumptions-6","page":"LTI Omnidirectional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"single stationary omnidirectional source\nsingle stationary omnidirectional receiver at the same location as source\nsingle ideal point reflector\nthe source emits a pulse train with period T\nrandom noise presence","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the assumptions, we simulate the following geometry for scenario F.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Forward-Modeling-6","page":"LTI Omnidirectional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"For scenario F, we provided the position of the source ùê©‚Çõ, the receiver's position ùê©·µ£, the transmitted signal mathsfp(t), and an ideal point reflector bmxi_0.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Now the expression for the reflector function is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff(bmxi) = mathsfalpha_0 delta(bmxi - bmxi_0)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"We compute the reflection due to the source as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfr(bmxit) = mathsfalpha_0 delta(bmxi - bmxi_0)\r\nmathsfAleft(fracbmxi-mathbfp_mathrms\r\nmathrmcright) mathsfpleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Finally, the closed form expression of the observed signal, mathsfz(t) is given by","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfz(t) = mathsfalpha_0 mathsfAleft(fracmathbfp_mathrmr-bmxi_0mathrmcright)\r\nmathsfAleft(fracbmxi_0-\r\nmathbfp_mathrmsmathrmcright) mathsfpleft(t-\r\nfracmathbfp_mathrmr-bmxi_0+bmxi_0-\r\nmathbfp_mathrmsmathrmcright)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£ = [0.0, 0.0]\r\nT  = 15.0e-6\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-7)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.0e-06c,0.0]\r\nq = LTIsourceO(ùê©‚Çõ,p)\r\nr = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt=0.0:T/100:5T\r\np1 = plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2 = plot( t, z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1),size=(800,800))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/#Inverse-Modeling-6","page":"LTI Omnidirectional Modeling","title":"Inverse Modeling","text":"","category":"section"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Given the scenario F assumptions, we obtained the received signal, mathsfz(t). Now by considering the transmitted singal as ","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsfp(t)=Œ¥(mathrmmod(t-t_mathrmpT))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"we computed the reflector function, mathsff_k with respect to each pulse's transmission time, kT where k in mathbfZ in the presence of random white noise as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"mathsff_k(bmxi)=dfracmathsfzleft(t_mathrmp+kT+fracmathbfp_mathrmr-bmxi+bmxi-mathbfp_mathrms\r\nmathrmcright)mathsfAbig(fracbmxi-mathbfp_mathrmsmathrmcbig)    \r\nmathsfAbig(fracmathbfp_mathrmr-bmximathrmcbig)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"Finally, the reflector function is given as follows","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"hatmathsff(bmxi) = frac_k=0^M-1 mathsff_k(bmxi)M","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£ = [0.0, 0.0]\r\nT  = 15.0e-6\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-7)\r\nŒ±‚ÇÅ = -0.7; ùõè‚ÇÅ = [3.0e-06c,0.0]\r\nq = LTIsourceO(ùê©‚Çõ,p)\r\nr = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nf‚ÇÅ(Œæ::Vector{Float64}) = ifelse(norm(Œæ)>c*T/2, NaN, (0.5e-05randn(1)[1]+z(t‚Çö+0*T+(norm(Œæ-ùê©‚Çõ).+ norm(ùê©·µ£-Œæ))./c))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c)))\r\nf‚ÇÇ(Œæ::Vector{Float64}) = ifelse(norm(Œæ)>c*T/2, NaN, (0.5e-05randn(1)[1]+z(t‚Çö+1*T+(norm(Œæ-ùê©‚Çõ).+ norm(ùê©·µ£-Œæ))./c))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c)))          \r\nf‚ÇÉ(Œæ::Vector{Float64}) = ifelse(norm(Œæ)>c*T/2, NaN, (0.5e-05randn(1)[1]+z(t‚Çö+2*T+(norm(Œæ-ùê©‚Çõ).+ norm(ùê©·µ£-Œæ))./c))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c)))\r\nf‚ÇÑ(Œæ::Vector{Float64}) = ifelse(norm(Œæ)>c*T/2, NaN, (0.5e-05randn(1)[1]+z(t‚Çö+3*T+(norm(Œæ-ùê©‚Çõ).+ norm(ùê©·µ£-Œæ))./c))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c)))\r\nf‚ÇÖ(Œæ::Vector{Float64}) = ifelse(norm(Œæ)>c*T/2, NaN, (0.5e-05randn(1)[1]+z(t‚Çö+4*T+(norm(Œæ-ùê©‚Çõ).+ norm(ùê©·µ£-Œæ))./c))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c)))\r\nf(Œæ::Vector{Float64}) = (f‚ÇÅ(Œæ).+f‚ÇÇ(Œæ).+f‚ÇÉ(Œæ).+f‚ÇÑ(Œæ).+f‚ÇÖ(Œæ))/5\r\np11=inversePlot2D([q],[r],[z],f‚ÇÅ)\r\np12=inversePlot2D([q],[r],[z],f‚ÇÇ)\r\np13=inversePlot2D([q],[r],[z],f‚ÇÉ)\r\np14=inversePlot2D([q],[r],[z],f‚ÇÑ)\r\np15=inversePlot2D([q],[r],[z],f‚ÇÖ)\r\np6=inversePlot2D([q],[r],[z],f)\r\nplot(p11,p12,p13,p14,p15,p6,layout=(3,2),size=(1000,1000))","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"By transmitting more number of pulses, we can average out the white noise presence in the model and can get better target estimation. Here we provide the result of target estimation with 50 pulses i.e M=50.","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£ = [0.0, 0.0]\r\nT  = 15.0e-6\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(mod(t-t‚Çö,T),1.0e-7)\r\nŒ±‚ÇÅ = 0.7; ùõè‚ÇÅ = [0.2c*T,0.0]\r\nq = LTIsourceO(ùê©‚Çõ,p)\r\nr = pointReflector(ùõè‚ÇÅ,Œ±‚ÇÅ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nM=50\r\nfm(Œæ::Vector{Float64}) = [ifelse(norm(Œæ)>c*T/2, NaN, (0.5e-05randn(1)[1]\r\n+z(t‚Çö+(k-1)*T+(norm(Œæ-ùê©‚Çõ).+ norm(ùê©·µ£-Œæ))./c))/(A(norm(Œæ-ùê©‚Çõ)/c).*A(norm(ùê©·µ£-Œæ)/c))) for k‚àà1:M]\r\ng(Œæ::Vector{Float64}) = sum(fm(Œæ)[i] for i ‚àà 1:M )/M\r\ninversePlot2D([q],[r],[z],g)","category":"page"},{"location":"omniDirectionalLTI/omnidirLTIsource/","page":"LTI Omnidirectional Modeling","title":"LTI Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"reflectors/reflector/#Reflectors","page":"Reflectors","title":"Reflectors","text":"","category":"section"},{"location":"reflectors/reflector/#Ideal-Point-Reflectors","page":"Reflectors","title":"Ideal Point Reflectors","text":"","category":"section"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"We define an ideal point reflectors with reflection coefficients, mathsfalpha_1mathsfalpha_2ldotsmathsfalpha_n located at fixed positions, say bmŒæ‚ÇÅbmŒæ‚ÇÇldotsbmŒæ‚Çô as follows","category":"page"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"mathsff(bmxi) = sum_n mathsfalpha_n delta(bmxi - bmxi_n)","category":"page"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"Note that the reflection coefficients take negative values since we assume that the voltage is fixed at the reflector's end. Mathematically, we define the reflection due to the LTI Omnidirectional Source as follows","category":"page"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"mathsfr(bmxit) = mathsff(bmxi) mathsfq(bmxit)","category":"page"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"(Image: )","category":"page"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"using LTVsystems\r\nùê©‚Çõ =  [0.0, 0.0]\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = -0.7; ùõè‚ÇÄ = ùõè‚ÇÄ = [3.75e-06c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)","category":"page"},{"location":"reflectors/reflector/#Continuous-Reflectors-as-a-Line-Segment","page":"Reflectors","title":"Continuous Reflectors as a Line Segment","text":"","category":"section"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"We define a simple continuous reflector in term of a line segment, AB of length, L as follows","category":"page"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"mathsff(bmxi) = int_0^Lmathsfalpha_0 delta(bmxi - bmxi_0+kbmu) mathrmdk","category":"page"},{"location":"reflectors/reflector/","page":"Reflectors","title":"Reflectors","text":"where mathsfalpha_0 is a reflection coefficient, bmŒæ‚ÇÄ is an initial position vector, bmu is an unit vector in the direction of AB and k is any scalar quantity.","category":"page"},{"location":"sources/source/#Sources","page":"Sources","title":"Sources","text":"","category":"section"},{"location":"sources/source/#LTI-Omnidirectional-Source","page":"Sources","title":"LTI Omnidirectional Source","text":"","category":"section"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"An LTI Omnidirectional Source  is parameterized by taking the convolution between the transmitted signal and the impulse response from the source located at position, mathbfp_mathrms. Mathematically, we can define an LTI Omnidirectional Source as follows","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"mathsfq(bmxit)=mathsfp(t) oversett* mathsfh(bmxitmathbfp_mathrms)","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"(Image: )","category":"page"},{"location":"sources/source/#Defining-an-LTI-Omnidirectional-Source","page":"Sources","title":"Defining an LTI Omnidirectional Source","text":"","category":"section"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"We can define an  LTI Omnidirectional Source by calling LTIsourceO() with a transmitted signal, mathsfp(t) and the source position vector, mathbfp_mathrms.","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"using LTVsystems\r\nùê©‚Çõ =  [0.0, 0.0]\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nq = LTIsourceO(ùê©‚Çõ, p)","category":"page"},{"location":"sources/source/#LTI-Directional-Source","page":"Sources","title":"LTI Directional Source","text":"","category":"section"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"An LTI Directional Source is parameterized by accounting the direction of the antenna which is defined by directional gain,","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"mathrmD_mathrmsleft(bmxitextcolormyLightSlateGrey\r\nmathbfp_mathrmsbmb_mathrmsright)= mathrmG_mathrms\r\nleft(bmbbmxi-mathbfp_mathrmsright)","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"where  returns the angle between the two arguments and mathrmG_mathrms(Theta) is the source antenna's textitvoltage gain as a function of angle Theta relative to the beam center bmb_mathrms.","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"Mathematically, an LTI Directional Source is given as follows.","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"mathsfq(bmxit)=mathsfp(t) oversett* mathsfhbig(bmxit\r\ntextcolormyLightSlateGreymathbfp_mathrmsbmb_mathrmsmathrmG_mathrms(cdot)big)","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"(Image: )","category":"page"},{"location":"sources/source/#Defining-an-LTI-Directional-Source","page":"Sources","title":"Defining an LTI Directional Source","text":"","category":"section"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"We can define an  LTI Directional Source by calling LTIsourceDTI() with a transmitted signal, mathsfp(t), the source position vector, mathbfp_mathrms, time-invariant beam center, bmb_mathrms and mathrmG_mathrms(Theta) is the source antenna's textitvoltage gain as a function of angle Theta relative to the beam center bmb_mathrms.","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"using LTVsystems\r\nùê©‚Çõ =  [0.0, 0.0]\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ = [1.0,0.0]\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/8)\r\nq = LTIsourceDTI(ùê©‚Çõ, p, ùêõ, G)","category":"page"},{"location":"sources/source/#Stationary-Directional-Source-with-Time-Varying-Beam-Center","page":"Sources","title":"Stationary Directional Source with Time-Varying Beam Center","text":"","category":"section"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"A Stationary Directional Source is parameterized by accounting the direction of the antenna with a time-varying (rotating) beam and is defined by directional gain as follows","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"mathrmD_mathrmsleft(bmxitextcolormyLightSlateGrey\r\nmathbfp_mathrmsbmb_mathrmsright)= mathrmG_mathrms\r\nleft(bmb(t)bmxi-mathbfp_mathrmsright)","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"where  returns the angle between the two arguments and mathrmG_mathrms(Theta) is the source antenna's textitvoltage gain as a function of angle Theta relative to the beam center bmb_mathrms(t).","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"Mathematically, a Stationary Directional Source with time-varying beam center is given as follows","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"mathsfq(bmxit)=mathsfp(t) oversett* mathsfhbig(bmxit\r\ntextcolormyLightSlateGreymathbfp_mathrmsbmb_mathrms(cdot)mathrmG_mathrms(cdot)big)","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"(Image: )","category":"page"},{"location":"sources/source/#Defining-an-Stationary-Directional-Source-with-Time-Varying-Beam-Center","page":"Sources","title":"Defining an Stationary Directional Source with Time-Varying Beam Center","text":"","category":"section"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"We can define an  Stationary Directional Source with time-varying beam center by calling STATsourceD() with a transmitted signal, mathsfp(t), the source position vector, mathbfp_mathrms, time-varying beam center, bmb_mathrms(t) and mathrmG_mathrms(Theta) is the source antenna's textitvoltage gain as a function of angle Theta relative to the beam center bmb_mathrms(t).","category":"page"},{"location":"sources/source/","page":"Sources","title":"Sources","text":"using LTVsystems\r\nùê©‚Çõ =  [0.0, 0.0]\r\nt‚Çö = 1.0e-06\r\np(t) = Œ¥n(t-t‚Çö,1.0e-07)\r\nùêõ(t) = [cos(2œÄ*10*t),0.0]/(norm(cos(2œÄ*10*t)))\r\nG(Œ∏) = ùí©·µ§(Œ∏, Œº=0.0, œÉ=œÄ/8)\r\nq = STATsourceD(ùê©‚Çõ, p, ùêõ, G)","category":"page"},{"location":"omniDirectionalLTV/omnidirLTVsource/#LTV-Omnidirectional-Modeling","page":"LTV Omnidirectional Modeling","title":"LTV Omnidirectional Modeling","text":"","category":"section"},{"location":"omniDirectionalLTV/omnidirLTVsource/","page":"LTV Omnidirectional Modeling","title":"LTV Omnidirectional Modeling","text":"Symbol Type Description\nt scalar variable time\nbmxi vector variable position\nmathbfp_mathrms(t) vector function of time position of source\nmathbfp_mathrmr(t) vector function of time position of receiver\nmathsfh_œÑbig(bmxitmathbfp_mathrms(cdot)big) scalar function of position and time LTI impulse response from    mathbfp_mathrms(t) to  bmxi\nmathsfg_œÑbig(bmxitmathbfp_mathrmr(cdot)big) scalar function of position and time LTI impulse response from    bmxi to mathbfp_mathrmr(t)","category":"page"},{"location":"omniDirectionalLTV/omnidirLTVsource/","page":"LTV Omnidirectional Modeling","title":"LTV Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"omniDirectionalLTV/omnidirLTVsource/#Scenario-A","page":"LTV Omnidirectional Modeling","title":"Scenario A","text":"","category":"section"},{"location":"omniDirectionalLTV/omnidirLTVsource/#Scenario-Assumptions","page":"LTV Omnidirectional Modeling","title":"Scenario Assumptions","text":"","category":"section"},{"location":"omniDirectionalLTV/omnidirLTVsource/","page":"LTV Omnidirectional Modeling","title":"LTV Omnidirectional Modeling","text":"single omnidirectional source moving with a constant speed\nsingle omnidirectional receiver at same location as the source moving with a   constant speed\nsingle stationary ideal point reflector\nthe source emits an impulse","category":"page"},{"location":"omniDirectionalLTV/omnidirLTVsource/#Forward-Modeling","page":"LTV Omnidirectional Modeling","title":"Forward Modeling","text":"","category":"section"},{"location":"omniDirectionalLTV/omnidirLTVsource/","page":"LTV Omnidirectional Modeling","title":"LTV Omnidirectional Modeling","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ(t) = [0.5c, 0.0]*t\r\nùê©·µ£(t) = ùê©‚Çõ(t)\r\np(t) = Œ¥n(t,0.05)\r\nq = LTVsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [0.5c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTVreceiverO([r],ùê©·µ£)\r\nt = collect(-2.0:0.001:2.0)\r\np1=plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2=plot(t,z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"omniDirectionalLTV/omnidirLTVsource/","page":"LTV Omnidirectional Modeling","title":"LTV Omnidirectional Modeling","text":"(Image: )","category":"page"},{"location":"typesMethodsFunctions/#Types/Methods/Functions","page":"Types/Methods/Functions","title":"Types/Methods/Functions","text":"","category":"section"},{"location":"typesMethodsFunctions/#Index","page":"Types/Methods/Functions","title":"Index","text":"","category":"section"},{"location":"typesMethodsFunctions/","page":"Types/Methods/Functions","title":"Types/Methods/Functions","text":"","category":"page"},{"location":"typesMethodsFunctions/#Public-Interface","page":"Types/Methods/Functions","title":"Public Interface","text":"","category":"section"},{"location":"typesMethodsFunctions/","page":"Types/Methods/Functions","title":"Types/Methods/Functions","text":"Modules = [LTVsystems]","category":"page"},{"location":"typesMethodsFunctions/#LTVsystems.LTIreceiverO","page":"Types/Methods/Functions","title":"LTVsystems.LTIreceiverO","text":"z = LTIreceiverO([R‚ÇÅ,R‚ÇÇ,‚Ä¶R‚Çô],ùê©·µ£)\n\nCreate an LTI Omnidirectional Receiver by calling LTIreceiverO() with the receiver position, ùê©·µ£ and all the reflections, R·µ¢ where i=1,2,‚Ä¶n.\n\nExamples\n\nusing LTVsystems\nùê©‚Çõ =  [0.0, 0.0]\nùê©·µ£ =  ùê©‚Çõ\np(t) = Œ¥n(t,1.0e-10)\nq = LTIsourceO(ùê©‚Çõ, p)\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [1.8,0.0]\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\nz = LTIreceiverO([r],ùê©·µ£)\n\n\n\n\n\n","category":"type"},{"location":"typesMethodsFunctions/#LTVsystems.LTIsourceO","page":"Types/Methods/Functions","title":"LTVsystems.LTIsourceO","text":"q = LTIsourceO(ùê©‚Çõ, p)\nR = LTIsourceO(ùõè, r)\n\nCreate an LTI Omnidirectional Source by calling LTIsourceO() with the source position, ùê©‚Çõ and the transmisson signal, p.\n\nExamples\n\nusing LTVsystems\nùê©‚Çõ =  [0.0, 0.0]\np(t) = Œ¥(t,1.0e-10)\nq = LTIsourceO(ùê©‚Çõ, p)\n\nAnother type of sources, called as reflected sources can also be defined by calling LTIsourceO() with reflectors position, ùõè and the reflected signal, given by r = Œ± q(ùõè,t).\n\nExamples\n\nusing LTVsystems\nùê©‚Çõ =  [0.0, 0.0]\np(t) = Œ¥(t,1.0e-10)\nq = LTIsourceO(ùê©‚Çõ, p)\nŒ±‚ÇÅ = 0.7; ùõè‚ÇÅ = [1.8,0.0]\nR‚ÇÅ = LTIsourceO(ùõè‚ÇÅ, t->Œ±‚ÇÅ*q(ùõè‚ÇÅ,t))\n\n\n\n\n\n","category":"type"},{"location":"typesMethodsFunctions/#LTVsystems.LTVreceiverO","page":"Types/Methods/Functions","title":"LTVsystems.LTVreceiverO","text":"z = LTVreceiverO()\n\n\n\n\n\n","category":"type"},{"location":"typesMethodsFunctions/#LTVsystems.LTVsourceO","page":"Types/Methods/Functions","title":"LTVsystems.LTVsourceO","text":"q =\n\n\n\n\n\n","category":"type"},{"location":"cite/#Cite","page":"Cite","title":"Cite","text":"","category":"section"},{"location":"cite/","page":"Cite","title":"Cite","text":"If you use this software in you research, please cite the following works.","category":"page"},{"location":"#LTVsystems","page":"Home","title":"LTVsystems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LTVsystems","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#Users","page":"Home","title":"Users","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Download Julia v1.6.4 or later, if you haven't already.\nAdd the LTVsystems module entering the following at the REPL ]add https://github.com/NMSU-ISA/LTVsystems.","category":"page"},{"location":"#Student-Developers","page":"Home","title":"Student Developers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Clone the LTVsystems module to username/.julia/dev/.\nEnter the package manager in REPL by pressing ]  then add the package by typing dev LTVsystems rather than add LTVsystems.","category":"page"},{"location":"#Table-of-Contents","page":"Home","title":"Table of Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"sources/source.md\",\n         \"reflectors/reflector.md\",\n         \"receivers/receiver.md\",\n         \"omniDirectionalLTI/omnidirLTIsource.md\",\n         \"directionalLTI/dirLTIsource.md\",\n         \"stationaryDirectionSource/stationaryDirSource.md\",\n         \"modelingLTV Doppler/modelLTVDoppler.md\",\n         \"omniDirectionalLTV/omnidirLTVsource.md\",\n         \"directionalLTV/dirLTVsource.md\",\n         \"typesMethodsFunctions.md\",\n         \"cite.md\"]","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/#LTV-Doppler-Effect-Modeling","page":"LTV Modeling Doppler Effect","title":"LTV Doppler Effect Modeling","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"In order to observe the Doppler effect, we consider a time-varying receiver at position mathbfp_mathrmr(t), a source at position mathbfp_mathrms and a reflector at an arbitrary position bmxi.","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"The LTI impulse response from mathbfp_mathrms to  bmxi is given by","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"mathsfh(bmxitmathbfp_mathrms) = mathsfAleft(fracbmxi-mathbfp_mathrmsmathrmcright) deltaleft(t-fracbmxi-mathbfp_mathrmsmathrmcright)","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-A-[Real-exponential-signal,-single-reflector,-stationary-transmitter-and-moving-receiver]","page":"LTV Modeling Doppler Effect","title":"Scenario A [Real exponential signal, single reflector, stationary transmitter and moving receiver]","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-Assumptions","page":"LTV Modeling Doppler Effect","title":"Scenario Assumptions","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"single stationary omnidirectional source\nsingle omnidirectional receiver moving with a constant speed\nsingle stationary ideal point reflector\nthe source emits a real exponential signal","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"Given the assumptions, we observed the final signal that accounts the Doppler effect inherently in term of time-scale and shift.","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£(t) = ùê©‚Çõ + [0.8c, 0.0]*t\r\np(t) = exp(-t^2)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [0.5c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTVreceiverO([r],ùê©·µ£)\r\nt = collect(-2.0:0.001:2.0)\r\np1=plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2=plot(t,z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-B-[Sinusoidal-signal,-single-reflector,-stationary-transmitter-and-moving-receiver]","page":"LTV Modeling Doppler Effect","title":"Scenario B [Sinusoidal signal, single reflector, stationary transmitter and moving receiver]","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-Assumptions-2","page":"LTV Modeling Doppler Effect","title":"Scenario Assumptions","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"single stationary omnidirectional source\nsingle omnidirectional receiver moving with a constant speed\nsingle stationary ideal point reflector\nthe source emits a sinusoidal signal","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£(t) = [0.5c, 0.5c] + [0.8c, 0.0]*t\r\np(t) = 100cos(10.0œÄ*t)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [0.5c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTVreceiverO([r],ùê©·µ£)\r\nt = collect(-2.0:0.001:2.0)\r\np1=plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2=plot(t,z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-C-[Complex-exponential-signal,-single-reflector,-stationary-transmitter-and-moving-receiver]","page":"LTV Modeling Doppler Effect","title":"Scenario C [Complex exponential signal, single reflector, stationary transmitter and moving receiver]","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-Assumptions-3","page":"LTV Modeling Doppler Effect","title":"Scenario Assumptions","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"single stationary omnidirectional source\nsingle omnidirectional receiver moving with a constant speed\nsingle stationary ideal point reflector\nthe source emits a complex exponential signal","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ = [0.0, 0.0]\r\nùê©·µ£(t) = [0.5c, 0.5c] + [0.8c, 0.0]*t\r\np(t) = 100exp(1im*2œÄ*10*t)\r\nq = LTIsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [0.5c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTVreceiverO([r],ùê©·µ£)\r\nt = collect(-2.0:0.001:2.0)\r\np1=plot(t,real.(p.(t)), xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2=plot(t,real.(z(t)), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))\r\np11=plot(t,p.(t), xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np12=plot(t,z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p11,p12,layout=(2,1))","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-D-[Real-exponential-signal,-single-reflector,-moving-transmitter-and-stationary-receiver]","page":"LTV Modeling Doppler Effect","title":"Scenario D [Real exponential signal, single reflector, moving transmitter and stationary receiver]","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-Assumptions-4","page":"LTV Modeling Doppler Effect","title":"Scenario Assumptions","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"single omnidirectional source moving with a constant speed\nsingle stationary omnidirectional receiver\nsingle stationary ideal point reflector\nthe source emits a real exponential signal","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"Given the assumptions, we observed the final signal that accounts the Doppler effect inherently in term of time-scale and shift.","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ(t) = [0.1c, 0.1c] + [0.8c, 0.0]*t\r\nùê©·µ£ = [0.2c, 0.2c]\r\np(t) = exp(-t^2)\r\nq = LTVsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [0.5c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt = collect(-4.0:0.001:4.0)\r\np1=plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2=plot(t,z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-E-[Sinusoidal-signal,-single-reflector,-moving-transmitter-and-stationary-receiver]","page":"LTV Modeling Doppler Effect","title":"Scenario E [Sinusoidal signal, single reflector, moving transmitter and stationary receiver]","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-Assumptions-5","page":"LTV Modeling Doppler Effect","title":"Scenario Assumptions","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"single omnidirectional source moving with a constant speed\nsingle stationary omnidirectional receiver\nsingle stationary ideal point reflector\nthe source emits a sinusoidal signal","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ(t) = [0.1c, 0.1c] + [0.8c, 0.0]*t\r\nùê©·µ£ = [0.2c, 0.2c]\r\np(t) = 100cos(10.0œÄ*t)\r\nq = LTVsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [0.5c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt = collect(-4.0:0.001:4.0)\r\np1=plot(t,p, xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2=plot(t,z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-F-[Complex-exponential-signal,-single-reflector,-moving-transmitter-and-stationary-receiver]","page":"LTV Modeling Doppler Effect","title":"Scenario F [Complex exponential signal, single reflector, moving transmitter and stationary receiver]","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/#Scenario-Assumptions-6","page":"LTV Modeling Doppler Effect","title":"Scenario Assumptions","text":"","category":"section"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"single omnidirectional source moving with a constant speed\nsingle stationary omnidirectional receiver\nsingle stationary ideal point reflector\nthe source emits a complex exponential signal","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"using LTVsystems\r\nusing Plots\r\nùê©‚Çõ(t) = [0.1c, 0.1c] + [0.8c, 0.0]*t\r\nùê©·µ£ = [0.2c, 0.2c]\r\np(t) = 50exp(1im*2œÄ*15*t)\r\nq = LTVsourceO(ùê©‚Çõ, p)\r\nŒ±‚ÇÄ = 0.7; ùõè‚ÇÄ = [0.5c,0.0]\r\nr = pointReflector(ùõè‚ÇÄ,Œ±‚ÇÄ,q)\r\nz = LTIreceiverO([r],ùê©·µ£)\r\nt = collect(-4.0:0.001:4.0)\r\np1=plot(t,real.(p.(t)), xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np2=plot(t,real.(z(t)), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p1,p2,layout=(2,1))\r\np11=plot(t,p.(t), xlab=\"time (sec)\", ylab=\"p(t)\", legend=:false)\r\np12=plot(t,z(t), xlab=\"time (sec)\", ylab=\"z(t)\", legend=:false)\r\nplot(p11,p12,layout=(2,1))","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"},{"location":"modelingLTV Doppler/modelLTVDoppler/","page":"LTV Modeling Doppler Effect","title":"LTV Modeling Doppler Effect","text":"(Image: )","category":"page"}]
}
